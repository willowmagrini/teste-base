name: CI

on:
  push:
    branches:
      - main
    tags:
      - '*'

jobs:
  build_assets:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
    container:
      image: node:20
    env:
      THEME_NAME: base-theme-slug
    steps:
      - uses: actions/checkout@v2
      - name: Remove dist directory
        run: rm -rf themes/${{ env.THEME_NAME }}/dist 
      - name: Remove lock
        run: rm -rf themes/${{ env.THEME_NAME }}/package-lock.json
      - name: Remove node_modules
        run: rm -rf themes/${{ env.THEME_NAME }}/node_modules
      - name: Install npm packages
        run: npm --prefix themes/${{ env.THEME_NAME }}/ install
      - name: Run production build
        run: npm --prefix themes/${{ env.THEME_NAME }}/ run production-github
      - name: Remove node_modules directory
        run: rm -rf themes/${{ env.THEME_NAME }}/node_modules

  create_pack_develop:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    container:
      image: hacklab/alpine-3.14.2-zip:1.1.0
    env:
      THEME_NAME: base-theme-slug
    needs: build_assets
    steps:
      - uses: actions/checkout@v2
      - name: Create deploy zips directory
        run: mkdir -p /deploy-zips/
      - name: Zip theme
        run: |
          cd themes/
          zip -r /deploy-zips/${{ env.THEME_NAME }}.zip ${{ env.THEME_NAME }}
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.THEME_NAME }}-develop
          path: /deploy-zips/${{ env.THEME_NAME }}.zip

  create_pack_production:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    container:
      image: hacklab/alpine-3.14.2-zip:1.1.0
    env:
      THEME_NAME: base-theme-slug
    needs: build_assets
    steps:
      - uses: actions/checkout@v2
      - name: Create deploy zips directory
        run: mkdir -p /deploy-zips/
      - name: Zip theme
        run: |
          cd themes/
          zip -r /deploy-zips/${{ env.THEME_NAME }}.zip ${{ env.THEME_NAME }}
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.THEME_NAME }}-production
          path: /deploy-zips/${{ env.THEME_NAME }}.zip

  create_release:
    runs-on: ubuntu-latest
    needs: [create_pack_develop, create_pack_production]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Download artifact (develop)
        if: github.ref == 'refs/heads/main'
        uses: actions/download-artifact@v3
        with:
          name: base-theme-slug-develop
          path: ./
      - name: Download artifact (production)
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/download-artifact@v3
        with:
          name: base-theme-slug-production
          path: ./
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset (develop)
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./base-theme-slug.zip
          asset_name: base-theme-slug.zip
          asset_content_type: application/zip
      - name: Upload Release Asset (production)
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./base-theme-slug.zip
          asset_name: base-theme-slug.zip
          asset_content_type: application/zip
